%include "sseutils64.nasm"

 

section .data            ; Sezione contenente dati inizializzati

 

row      equ         	8
col	 equ 	      8
col2	 equ	     8
d 	 dq		1.0
; 
; Le matrici si assumono memorizzate per righe
;

 

align 32
inizio:        dq        1.0, 1.0, 1.0, 1.0

align 32
inizio1:        dq        1.0, 2.0, 3.0, 4.0

 

section .bss            ; Sezione contenente dati non inizializzati

 

alignb 32
A:        resq    row*col
alignb 32
B:        resq    col*row
alignb 32
C:        resq    row*col2


 

section .text            ; Sezione contenente il codice macchina

 

global    main

 

main:    start

 

        ; ----------------------------------------
        ; carica le matrici A e B e azzera la matrice C
        ;
        vmovapd        ymm0, [inizio]
        vxorpd       ymm2,ymm2 
        mov        ebx, 0
        mov        ecx, row*col/4
ciclo1: vmovapd        [A+ebx], ymm0
        add        ebx, 32
        dec        ecx
        jnz        ciclo1
        
      	vmovapd      ymm3,[inizio1]
        mov        ebx, 0
        mov        ecx, col*row/4
ciclo2: vmovapd        [B+ebx], ymm3
        add        ebx, 32
        dec        ecx
        jnz        ciclo2
        
         
        mov        ebx, 0
        mov        ecx, row*col2/4
ciclo3:  vmovapd        [C+ebx], ymm2
        add        ebx, 32
        dec        ecx
        jnz        ciclo3
  
        
        mov 	eax,0			;i=0
fori:	mov	ebx,0			;j=0
forj:	imul edi, eax, col*8		;
        vxorps ymm4,ymm4
        vxorps ymm5,ymm5
        vxorps ymm6,ymm6
        vxorps ymm7,ymm7
	imul edx, eax,col2*8
	
	mov ecx,0			;k=0
fork:	imul esi,ebx,col2*8		;
 	
	vmovapd ymm2,[A+edi+ecx*8]
	vmovapd ymm1,[B+esi+ecx*8]
	vmulpd  ymm1,ymm2
	vhaddpd ymm1,ymm1
        vpermq ymm1, ymm1, 0x39
	vhaddpd ymm1,ymm1
	vaddpd ymm4,ymm1
	
	
	vmovapd ymm2,[A+edi+ecx*8]
	vmovapd ymm1,[B+esi+ecx*8+32]
	vmulpd ymm1,ymm2
	vhaddpd ymm1,ymm1
        vpermq ymm1, ymm1, 0x39
	vhaddpd ymm1,ymm1
	vaddpd ymm5,ymm1
	
	
	
	vmovapd ymm2,[A+edi+ecx*8]
	vmovapd ymm1,[B+esi+ecx*8+64]
	vmulpd  ymm1,ymm2
	vhaddpd ymm1,ymm1
        vpermq ymm1, ymm1, 0x39
	vhaddpd ymm1,ymm1
	vaddpd ymm6,ymm1
	
	vmovapd ymm2,[A+edi+ecx*8]
	vmovapd ymm1,[B+esi+ecx*8+96]
	vmulpd  ymm1,ymm2
	vhaddpd ymm1,ymm1
        vpermq ymm1, ymm1, 0x39
	vhaddpd ymm1,ymm1
	vaddpd ymm7,ymm1
	
        add ecx,4			;
        cmp ecx,col			;
        jb fork			;
        
         vbroadcastsd ymm3,[d]
         
         vmulpd ymm4,ymm3
         movsd [C+edx+ebx*8],xmm4
         vmulpd ymm5,ymm3
         movsd [C+edx+ebx*8+8],xmm5
         vmulpd ymm6,ymm3
         movsd [C+edx+ebx*8+16],xmm6
         vmulpd ymm7,ymm3
         movsd [C+edx+ebx*8+24],xmm7
        
        add ebx,1			;
        cmp ebx,col2			;
        jb forj			;
        
         
        
        add eax,1			;
        cmp eax,row			;
        jb fori			;
        
        
        
       
       vprintpd C,row*col2/4	;
        
        stop
       
